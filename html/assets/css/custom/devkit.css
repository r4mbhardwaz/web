#devkit:fullscreen {
    --side-pad: 30px;
    padding: 30px var(--side-pad);
    background-color: var(--light-grey);
    grid-template-columns: 2fr 6fr 2fr;
    grid-template-rows: 50px 8fr 1fr;
}
#devkit:fullscreen h1 {
    margin: 0 0 20px 0;
}
#devkit:fullscreen .fullscreen {
    right: var(--side-pad);
}

.fullscreen {
    position: absolute;
    right: 0;
    margin-right: 0;
    font-size: 30px;
    color: var(--dark-grey);
    cursor: pointer;
    transition: background-color .15s;
    border-radius: 100%;
    padding: 20px;
}
.fullscreen:hover {
    background-color: var(--grey);
}

div#devkit {
    position: relative;
    height: calc(100vh - 125px - 30px - 50px); /* body has 125px padding, h1 has 26.8px (0.67em) margin, we want a 50px padding for clean boxes */
    display: grid;
    grid-template-areas: "head head head" "library code parser" "library code status";
    grid-template-columns: 2fr 4fr 2fr;
    grid-template-rows: 118px 8fr 1fr;
    grid-gap: 10px;
}
div#devkit > div {
    border: 2px solid var(--grey);
    border-radius: var(--border-radius);
    width: 100%;
    height: 100%;
    position: relative;
    padding: 20px;
    box-sizing: border-box;
}
div#devkit > div > .loading {
    position: absolute;
    top: -20px;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    color: var(--dark-grey);
}
div#devkit > div > .loading + span {
    display: block;
    text-align: center;
    color: var(--dark-grey);
    position: absolute;
    top: calc(50% + 5px);
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
}
div#devkit > h1 {
    grid-area: head;
}


div#library {
    grid-area: library;
}
div#library div {
    padding-left: 15px;
}
div#library span {
    display: block;
    padding: 5px 10px;
    transition: .1s;
    border-radius: 3px;
    cursor: pointer;
}
div#library span:hover {
    background-color: var(--grey);
}
div#library i {
    position: absolute;
    transform: translate(-25px, 7px);
    font-size: 15px;
}
div#library i[data-layer=user]::after {
    content: "\e7fd";
    color: var(--green);
}
/*
div#library i[data-layer=lang]::after {
    content: "\e8e2";
    color: var(--blue);
}
*/
div#library i[data-layer=entity]::after {
    content: "\e01e";
    color: var(--blue);
}
/*
div#library i[data-layer=skill]::after {
    content: "\e838";
    color: var(--blue);
}
*/
div#library i[data-layer=config]::after {
    content: "\f10b";
    color: var(--blue);
}
div#library i[data-layer=intent]::after {
    content: "\e87b";
    color: var(--blue);
}


div#parser {
    grid-area: parser;
}


div#code {
    grid-area: code;
    padding: 0px !important;
    overflow: auto;
}
div#code-editor {
    width: 100%;
    height: 100%;
    /* border-radius: 3px; */

    /* overflow: auto; */

    position: relative;
}
div#code-editor * {
    font-family: "jetbrains-mono" !important;
    /* font-family: monospace !important; */
    font-size: 13px !important;
}
div#code-editor code {
    padding: 0;
    background-color: transparent;
}


div#status {
    position: absolute;
    right: 0;
    bottom: 0;
    grid-area: status;
}
div#status > div {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    width: fit-content;
    width: -webkit-fit-content;
    transform: translateY(-2px);
}
div#status > div > span {
    display: block;
    margin-left: 10px;
    transform: translateY(2px);
}


div.container {
    margin-bottom: 0;
}
